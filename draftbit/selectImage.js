let ImageURI = ``;
let ImageBase64 = ``;
let imageCDUrl = ``;
let FileType = ``;

const onSelectImage = async () => {

    let result = await ImagePicker.launchImageLibraryAsync({
      base64: true
    });

    // if the process of selecting the image is cancelled or interrupted by the app user in between
    if (!result.cancelled) {

      ImageURI = result.uri;
      ImageBase64 = result.base64;
      if (ImageURI){
      	FileType = result.uri.split(".").slice(-1)[0];
      }
    }
  let img = await sendPost(ImageBase64);
  return img;
}

const sendPost = async (imgBase64) => {
	// prefix the base64 source URI
	let base64Img = "data:image/" + FileType + ";base64," + imgBase64;
	let apiUrl = "https://api.cloudinary.com/v1_1/dyq0xsqlc/image/upload";
	let res = ``;
	let data = {
		file: base64Img,
		upload_preset: "tkvnocode",
	};

    // Upload to image data to cloudinary using POST request
    await fetch(apiUrl, {
        body: JSON.stringify(data),
        headers: {
          'content-type': 'application/json',
        },
        method: 'POST',
      })
        .then(async (response) => {
          let data = await response.json();

          // check if the image is uploaded successfully
          // data.secure_url is the public URL generated by Cloudinary
           // add logic to send the public image URL to Airtable
          if (data.secure_url) {
            res =  data.secure_url;
          }
        })
        .catch((err) => {
        });
   let result = await res;
   return result;
  }

  imageCDUrl =  onSelectImage();

  return imageCDUrl;
  